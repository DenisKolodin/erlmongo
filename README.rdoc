= Info

Erlmongo is a pretty complete Erlang driver for mongodb. Gridfs stuff is not supported yet, but it will be done eventually.  

It supports records and proplists as datatypes. Strings can be lists or binaries, but strings received from mongodb (as a result of find) will be binaries.
The only built in limitation is in regards to record field names. They need to start with [a-z] (because of records) and be in latin1 (performance reason). Record values can of course be anything. It's a stupid idea to use non ascii characters as field names anyway.

I haven't used erlmongo in production yet, so all the bugs might not be ironed out and there are a few inconsistencies with the api (I'll fix them in the near future).

= Examples
  rr("erlmongo.hrl").
  % Set mongodb server info. singleServer() is the same as singleServer("localhost:27017")
  mongodb:singleServer().
  mongodb:connect().
  % Create an interface for test database (it has to be a binary)
  Mong = mongoapi:new(<<"test">>).
  
  % Save a new document
  Mong:save(#mydoc{name = "MyDocument", i = 10}).
  % Return the document, but only the "i" field (+ _id which always gets returned)
  Mong:findOne(#mydoc{i = 10}, [#mydoc.i]).
  

  % Set Index. First parameter is so that the driver knows what collection 
  %  we mean. If you have an already constructed record laying around use that.
  %  No need to construct a new record just so the driver can read the name.
  % Second parameter the index we wish to create. 1 = ascending, -1 = descending.
  Mong:ensureIndex(#mydoc{}, [{#mydoc.i, 1}, {#mydoc.name, -1}])

== Supported operation list
Collections
* remove
* save
* insert
* update
* batchInsert
* ensureIndex
* deleteIndex
* deleteIndexes
* count
* dropCollection
* createCollection

Search
* find
* findopt 
* cursor - getMore - closeCursor
* findOne

DB
* runCmd
* repairDatabase
* cloneDatabase
* dropDatabase
* addUser
* setProfilingLevel
* getProfilingLevel

== Author
 Sergej Jureƒçko

